<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<flow name="order-saveFlow" doc:id="87e7513a-9cbd-47d5-913f-2a5b3571663a" >
		<logger level="INFO" doc:name="Logger" doc:id="7f37988d-0266-4193-8343-8599c4a5ae6a" message="Save order details"/>
		<ee:transform doc:name="Transform Message" doc:id="002e2290-bcb4-463f-9fc0-9f1157b53b2e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
order: {
	customerName: payload.customerName as String default "",
	placementDate: payload.placementDate
},
orderItems: payload.orderItems map(( oiValues, oiIndex) ->
	{
		itemCount: oiValues.itemCount,
		itemId: oiValues.itemId
	})
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="Set Variable" doc:id="9df048c4-9349-40a4-ae10-a394e92664f0" variableName="incomingPayload"/>
		<set-variable value="0" doc:name="Set Variable" doc:id="304ffb47-d032-44ec-b258-6022d3777494" variableName="newOrderId"/>
		<set-variable value="null" doc:name="Set Variable" doc:id="1afe746a-21f5-4d90-879f-ed6a41b03fa3" variableName="error"/>
		<try doc:name="Try" doc:id="b7e063d7-043d-4ef7-b77b-ffcbec32cbc4" transactionalAction="ALWAYS_BEGIN" transactionType="XA">
			<flow-ref doc:name="save-order" doc:id="a63fd41b-c7f3-4a0d-b0a4-1dc71fb445f1" name="save-order"/>
			<flow-ref name="save-orderitem" doc:name="save-orderitem" />
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="bdbbdcc8-7464-4d10-8751-0b0e92eec864" >
					<logger level="INFO" doc:name="Logger" doc:id="637a7521-11e3-4e58-953e-3371688d0cbc" message="#[error]" />
					<set-variable value="#[error]" doc:name="Set Variable" doc:id="174d43ec-f23a-4b4e-b091-42e6a5199db2" variableName="error"/>
					<flow-ref doc:name="secure-order-payload-on-failure" doc:id="c2f364ff-c95d-4d2b-917d-bdb83ce9753b" name="secure-order-payload-on-failure"/>
				</on-error-continue>
			</error-handler>
		</try>
		<choice doc:name="Choice" doc:id="b68d960d-a013-4204-8785-be02ebd34ba9" >
			<when expression="#[error != null]">
				<ee:transform doc:name="Transform Message" doc:id="212a36f4-05a3-41c9-88a5-db390ef09182">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	success: true,
	orderDetails: Mule::lookup("get-order-by-id", {'orderId' : vars.newOrderId})
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="149be178-45f1-43b7-ba58-37b2ed1e62ab" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	success: false,
	errorDesc: vars.error.description,
	failSafeData: {
	 	sqsMessageId: payload.messageId,
	 	correlationId: vars.correlationId
	 	
	},
	payloadSent: write(vars.incomingPayload,'application/json')
}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		
	</flow>
	<flow name="save-order" doc:id="c34f1700-ccf3-4fdf-8901-582d2b39aa98" >
		<db:insert doc:name="Insert : Demo : orders" doc:id="96a5ed73-c4c9-451d-8ea2-bd6c2d9a116a" config-ref="Database_Config-XA" autoGenerateKeys="true" target="newOrderId" targetValue="#[payload['generatedKeys']['GENERATED_KEY']]">
			<db:sql>
			Insert into Orders (PlacementDate, CustomerName)
			values(:placementDate, :customerName);
			 </db:sql>
			<db:input-parameters><![CDATA[#[{
	'placementDate' : payload.order.placementDate,
	'customerName' : payload.order.customerName
}]]]>
			</db:input-parameters>
		</db:insert>
	</flow>
	<flow name="save-orderitem" doc:id="156a0729-48e2-4809-999e-db14f938d682" >
		<ee:transform doc:name="Transform Message" doc:id="e4f24acd-287e-4317-b06f-8e10cd770cc2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.orderItems map ((v,i) -> {
	'OrderId' : vars.newOrderId,
	'ItemCount' : v.itemCount,
	'ItemId' : v.itemId
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:bulk-insert doc:name="Bulk insert" doc:id="84cfba38-c9f1-46c0-852a-01effb084715" config-ref="Database_Config-XA">
			<db:sql>Insert into 
						OrderItems (OrderId, ItemCount, ItemId)
					values(:OrderId, :ItemCount, :ItemId);
			</db:sql>
			
			</db:bulk-insert>
		<!-- <db:insert doc:name="Insert : demo : OrderItem" doc:id="dc8c7474-bc49-4541-b854-1dd276cccc88" config-ref="Database_Config-XA">
			
			<db:sql>
					Insert into 
						OrderItem (OrderId, ItemCount, ItemId)
					values(:OrderId, :ItemCount, :ItemId);
			</db:sql>
			<db:input-parameters><![CDATA[#[#[{"OrderId",vars.newOrderId}]
			#[{"ItemCount", payload.orderItem.ItemCount}]
			#[{"ItemId", payload.orderItem.ItemId}]]]]>
				
			</db:input-parameters>
		</db:insert> -->
	</flow>
</mule>
